freeCodeCamp.org
Begin: 11:07 02/09/2020 		6 hours
End:
by OT√ÅVIO	maybe I put this txt in Markdown language (in a distant future)
__________________________________________________
Operation: Select and edit

In CSS we use selectors
	Types: 

    1) Element selector: uses the tag.
	<p> </p> -> p {	}

    2) Class selector: to specific items 
	<p class="aclass"> </p> -> .aclass { }
	- to several items (h1, p...)
	- dot is used as prefix

    3) Id selector:
	<p id="sometext"> </p> -> #sometext { }
	- octothorp

How to link a CSS file to a HTML one
	- Inside <head> </head> : 

    <link rel="stylesheet" type="text/css" href="../css/style.css">


Specificity: the more specific selector overrides other 
	inline-style > id > class > element

    <h2 class="about-me" id="me-about" style="color: steelblue;">

What are the differences between class and id?
	- As seem, id is more specific.
	CLASS: to be used multiple times
	ID: despite working if set in more than one object, the convention is to use once.

Pseudoselectors
	- Used after a colon (:)
	- Don't let space
    h2:hover {
		/*properties if pointer is over the selector's object and hover is the most specific*/ 
    }

    ul:first-child { } does not work
    li:first-child {
	color: blue;
    } /*works. It's the first list item*/

		first-child, last-child, nth-child(n), only-child (does not apply to multiple children)


More pseudoselectors
	link is unvisited link
	visited's default color: purple

    <a href="https://google.com" id="google-link">Clique aqui para ir ao Google!</a>
	- You need to put https to create a web link
	- The id is dispensable because it's the only link on page

    #google-link:link {		/*before clicking*/
	color: green;
    }

    #google-link:visited {
	color: red;
    }


Advanced selectors
1)
    h2 + a {
    	/*every a that comes directly after h2 (that follows h2)*/
    }

2) General sibling combinator/selector
	- the same as before, but both elements have to be sharing the same parent
    textarea ~ button {		
	/*to style every button followed by textarea and the same parent*/
    }

3) Child selector: direct children
    ul > li {
	/*every li inside ul. This is not so specific as li with pseudoselector. Does not apply to a sublist (list iniside an list item) */
    }

4) Decendant selector
    ul li {
	/*apply properties to li children*/
    }
    

Attribute selectors
    x[atrr=value] {  }
    h2[class='about-me'] { }	/*quotes are not imperative*/

    img[src^=...] { }	/*the attribute begins with this value*/
    img[src$=...] { } 	/*the attribute ends with this value*/
    img[src*=...] { } 	/*if it contains anywhere*/

	
a) White space attribute selector

    <h2 class="subtitle article-subtitle"> </h2> -> h2[class~="article-subtitle"]
	- you have to use ~=
	- dont forget the space between class and

b) General attribute selector (I couldn't understand!)
    h2[class|=article-subtitle] { /*dash*/
	background: green;
}


Properties
	
	